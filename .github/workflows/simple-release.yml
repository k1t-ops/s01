name: Simple Release (Linux x86_64)

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        default: 'v0.0.0'

env:
  GO_VERSION: '1.21'
  CGO_ENABLED: 0
  GOOS: linux
  GOARCH: amd64

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Determine version
      id: version
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi

    - name: Create build directory
      run: mkdir -p build

    - name: Build server binary
      working-directory: server
      run: |
        echo "Building discovery server..."
        go mod tidy
        go build -a -installsuffix cgo \
          -ldflags="-w -s -X main.version=${{ steps.version.outputs.version }}" \
          -o ../build/discovery-server .
        echo "Server binary built successfully"

    - name: Build client binary
      working-directory: client
      run: |
        echo "Building discovery client..."
        go mod tidy
        go build -a -installsuffix cgo \
          -ldflags="-w -s -X main.version=${{ steps.version.outputs.version }}" \
          -o ../build/discovery-client .
        echo "Client binary built successfully"

    - name: Verify binaries
      run: |
        echo "Verifying built binaries..."
        ls -la build/
        file build/discovery-server
        file build/discovery-client
        echo "Binary verification completed"

    - name: Package binaries
      run: |
        echo "Packaging binaries..."
        cd build

        # Package server
        tar -czf discovery-server-linux-amd64.tar.gz discovery-server

        # Package client
        tar -czf discovery-client-linux-amd64.tar.gz discovery-client

        echo "Packages created:"
        ls -la *.tar.gz

    - name: Generate checksums
      run: |
        echo "Generating checksums..."
        cd build
        sha256sum *.tar.gz > checksums.txt
        echo "Checksums generated:"
        cat checksums.txt

    - name: Create release notes
      run: |
        VERSION="${{ steps.version.outputs.version }}"

        cat > release_notes.md << EOF
        # Host Discovery Service ${VERSION}

        ## What's Included

        This release contains precompiled Linux x86_64 binaries for:
        - **discovery-server-linux-amd64.tar.gz** - Discovery server binary
        - **discovery-client-linux-amd64.tar.gz** - Discovery client binary
        - **checksums.txt** - SHA256 checksums for verification

        ## Quick Installation

        ### Using the one-liner installer:
        \`\`\`bash
        # Install both server and client
        curl -fsSL https://raw.githubusercontent.com/${{ github.repository }}/main/get.sh | bash

        # Install server only
        curl -fsSL https://raw.githubusercontent.com/${{ github.repository }}/main/get.sh | bash -s -- --server-only

        # Install client only
        curl -fsSL https://raw.githubusercontent.com/${{ github.repository }}/main/get.sh | bash -s -- --client-only

        # Install specific version
        curl -fsSL https://raw.githubusercontent.com/${{ github.repository }}/main/get.sh | bash -s -- --version ${VERSION}
        \`\`\`

        ### Manual installation:
        \`\`\`bash
        # Download and extract server
        curl -L https://github.com/${{ github.repository }}/releases/download/${VERSION}/discovery-server-linux-amd64.tar.gz | tar xz
        chmod +x discovery-server

        # Download and extract client
        curl -L https://github.com/${{ github.repository }}/releases/download/${VERSION}/discovery-client-linux-amd64.tar.gz | tar xz
        chmod +x discovery-client

        # Run with help to verify
        ./discovery-server --help
        ./discovery-client --help
        \`\`\`

        ## System Requirements

        - **Operating System**: Linux x86_64 (Ubuntu 18.04+, CentOS 7+, or equivalent)
        - **Dependencies**: None (statically linked binaries)
        - **Architecture**: 64-bit Intel/AMD processors

        ## Verification

        Verify downloaded files using the provided checksums:
        \`\`\`bash
        # Download checksums file
        curl -L https://github.com/${{ github.repository }}/releases/download/${VERSION}/checksums.txt -o checksums.txt

        # Verify files
        sha256sum -c checksums.txt
        \`\`\`

        ## Configuration

        After installation, edit the configuration files:
        - Server: \`~/.config/discovery/server.env\`
        - Client: \`~/.config/discovery/client.env\`

        ## Build Information

        - **Go Version**: ${{ env.GO_VERSION }}
        - **Build Date**: $(date -u +"%Y-%m-%dT%H:%M:%SZ")
        - **Git Commit**: ${{ github.sha }}
        - **Architecture**: linux/amd64
        - **CGO**: Disabled (static linking)

        ## Documentation

        - [Quick Install Guide](https://github.com/${{ github.repository }}/blob/main/QUICK-INSTALL.md)
        - [Binary Deployment Guide](https://github.com/${{ github.repository }}/blob/main/BINARY-DEPLOYMENT.md)
        - [Main Documentation](https://github.com/${{ github.repository }}#readme)

        EOF

    - name: Create Release and Upload Assets
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ steps.version.outputs.version }}
        name: "Discovery Service ${{ steps.version.outputs.version }}"
        body_path: release_notes.md
        draft: false
        prerelease: ${{ contains(steps.version.outputs.version, 'alpha') || contains(steps.version.outputs.version, 'beta') || contains(steps.version.outputs.version, 'rc') }}
        files: |
          build/discovery-server-linux-amd64.tar.gz
          build/discovery-client-linux-amd64.tar.gz
          build/checksums.txt
        fail_on_unmatched_files: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build Summary
      run: |
        echo "## ðŸŽ‰ Release Created Successfully!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY

        echo "| Component | File | Size |" >> $GITHUB_STEP_SUMMARY
        echo "|-----------|------|------|" >> $GITHUB_STEP_SUMMARY

        server_size=$(ls -lh build/discovery-server-linux-amd64.tar.gz | awk '{print $5}')
        client_size=$(ls -lh build/discovery-client-linux-amd64.tar.gz | awk '{print $5}')

        echo "| Server | discovery-server-linux-amd64.tar.gz | $server_size |" >> $GITHUB_STEP_SUMMARY
        echo "| Client | discovery-client-linux-amd64.tar.gz | $client_size |" >> $GITHUB_STEP_SUMMARY

        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Release**: ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "**Download**: https://github.com/${{ github.repository }}/releases/tag/${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY

        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ðŸš€ Quick Install Commands" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
        echo "# Install both components" >> $GITHUB_STEP_SUMMARY
        echo "curl -fsSL https://raw.githubusercontent.com/${{ github.repository }}/main/get.sh | bash" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "# Install specific version" >> $GITHUB_STEP_SUMMARY
        echo "curl -fsSL https://raw.githubusercontent.com/${{ github.repository }}/main/get.sh | bash -s -- --version ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
